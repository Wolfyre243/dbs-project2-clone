generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  userId     String   @id @default(uuid()) @map("user_id") @db.Uuid
  username   String   @db.VarChar(30)
  password   String   @db.Char(60)
  createdAt  DateTime @map("created_at") @db.Timestamptz()
  modifiedAt DateTime @map("modified_at") @db.Timestamptz()
  statusCode String   @map("status_code") @db.VarChar(30)

  phoneNumbers phoneNumber[]
  emails       email[]
  userProfile  userProfile?  @relation("UserToProfile")
  sessions     session[]
  auditLogs    auditLog[]
  events       event[]
  userRoles    userRole[]

  status status @relation(fields: [statusCode], references: [statusCode])

  @@index([statusCode])
}

model status {
  statusCode  String @id @map("status_code") @db.VarChar(30)
  description String @db.Text

  users        users[]
  audios       audio[]
  exhibits     exhibit[]
  phoneNumbers phoneNumber[]
  emails       email[]
  roles        role[]
  qrcodes      qrCode[]
  images       image[]
  subtitles    subtitle[]
  languages    language[]
  auditLogs    auditLog[]
  userProfiles userProfile[]
}

model audio {
  audioId     String   @id @default(uuid()) @map("audio_id") @db.Uuid
  fileUrl     String   @map("file_url") @db.VarChar(255)
  description String   @db.Text
  createdBy   String   @map("created_by") @db.Uuid
  languageId  String   @map("language_id") @db.VarChar(3)
  createdAt   DateTime @map("created_at") @db.Timestamptz()
  statusCode  String   @map("status_code") @db.VarChar(30)

  language language               @relation(fields: [languageId], references: [languageCode])
  status   status                 @relation(fields: [statusCode], references: [statusCode])
  exhibits exhibitAudioRelation[]
  exhibit  exhibit[]

  @@index([statusCode])
  @@index([languageId])
}

model exhibitAudioRelation {
  audioId   String @map("audio_id") @db.Uuid
  exhibitId String @map("exhibit_id") @db.Uuid

  audio   audio   @relation(fields: [audioId], references: [audioId])
  exhibit exhibit @relation(fields: [exhibitId], references: [exhibitId])

  @@id([audioId, exhibitId])
  @@map("exhibit_audio_relation")
}

model exhibit {
  exhibitId   String   @id @default(uuid()) @map("exhibit_id") @db.Uuid
  title       String   @db.VarChar(100)
  description String   @db.Text
  audioId     String   @map("audio_id") @db.Uuid
  createdBy   String   @map("created_by") @db.Uuid
  modifiedBy  String   @map("modified_by") @db.Uuid
  qrCodeId    String   @map("qr_code_id") @db.Uuid
  imageId     String   @map("image_id") @db.Uuid
  createdAt   DateTime @map("created_at") @db.Timestamptz()
  modifiedAt  DateTime @map("modified_at") @db.Timestamptz()
  statusCode  String   @map("status_code") @db.VarChar(30)

  audio                audio                  @relation(fields: [audioId], references: [audioId])
  qrCode               qrCode                 @relation(fields: [qrCodeId], references: [qrCodeId])
  image                image                  @relation(fields: [imageId], references: [imageId])
  subtitles            exhibitSubtitle[]
  status               status                 @relation(fields: [statusCode], references: [statusCode])
  exhibitAudioRelation exhibitAudioRelation[]

  @@index([statusCode])
  @@index([audioId])
  @@index([qrCodeId])
  @@index([imageId])
}

model auditLog {
  auditLogId String   @id @default(uuid()) @map("audit_log_id") @db.Uuid
  userId     String   @map("user_id") @db.Uuid
  ipAddress  String   @map("ip_address") @db.VarChar(45)
  entityName String   @map("entity_name") @db.VarChar(100)
  entityId   String   @map("entity_id") @db.Text
  actionType String   @map("action_type") @db.VarChar(100)
  oldValue   String   @map("old_value") @db.Text
  newValue   String   @map("new_value") @db.Text
  timestamp  DateTime @db.Timestamptz()
  statusCode String   @map("status_code") @db.VarChar(30)

  user   users  @relation(fields: [userId], references: [userId])
  status status @relation(fields: [statusCode], references: [statusCode])

  @@index([userId])
  @@index([statusCode])
  @@map("audit_log")
}

model phoneNumber {
  phoneNumberId String   @id @default(uuid()) @map("phone_number_id") @db.Uuid
  userId        String   @map("user_id") @db.Uuid
  phoneNumber   String   @map("phone_number") @db.Char(8)
  verified      Boolean
  isPrimary     Boolean  @map("is_primary")
  createdAt     DateTime @map("created_at") @db.Timestamptz()
  statusCode    String   @map("status_code") @db.VarChar(30)

  user   users  @relation(fields: [userId], references: [userId])
  status status @relation(fields: [statusCode], references: [statusCode])

  @@index([userId])
  @@index([statusCode])
}

model email {
  emailId    String   @id @default(uuid()) @map("email_id") @db.Uuid
  userId     String   @map("user_id") @db.Uuid
  email      String   @db.VarChar(100)
  verified   Boolean
  isPrimary  Boolean  @map("is_primary")
  createdAt  DateTime @map("created_at") @db.Timestamptz()
  statusCode String   @map("status_code") @db.VarChar(30)

  user   users  @relation(fields: [userId], references: [userId])
  status status @relation(fields: [statusCode], references: [statusCode])

  @@index([userId])
  @@index([statusCode])
}

model userRole {
  userId String @map("user_id") @db.Uuid
  roleId Int    @map("role_id")

  user users @relation(fields: [userId], references: [userId])
  role role  @relation(fields: [roleId], references: [roleId])

  @@id([userId, roleId])
  @@index([userId])
  @@index([roleId])
  @@map("user_role")
}

model role {
  roleId      Int    @id @default(autoincrement()) @map("role_id")
  roleName    String @map("role_name") @db.VarChar(20)
  description String @db.Text
  statusCode  String @map("status_code") @db.VarChar(30)

  userRoles userRole[]
  status    status     @relation(fields: [statusCode], references: [statusCode])

  @@index([statusCode])
}

model qrCode {
  qrCodeId   String   @id @default(uuid()) @map("qr_code_id") @db.Uuid
  qrLink     String   @map("qr_link") @db.VarChar(255)
  createdBy  String   @map("created_by") @db.Uuid
  createdAt  DateTime @map("created_at") @db.Timestamptz()
  statusCode String   @map("status_code") @db.VarChar(30)

  exhibit exhibit[]
  status  status    @relation(fields: [statusCode], references: [statusCode])

  @@index([statusCode])
}

model image {
  imageId     String   @id @default(uuid()) @map("image_id") @db.Uuid
  description String   @db.Text
  createdBy   String   @map("created_by") @db.Uuid
  createdAt   DateTime @map("created_at") @db.Timestamptz()
  statusCode  String   @map("status_code") @db.VarChar(30)

  exhibit exhibit[]
  status  status    @relation(fields: [statusCode], references: [statusCode])

  @@index([statusCode])
}

model event {
  eventId    String   @id @default(uuid()) @map("event_id") @db.Uuid
  sessionId  String   @map("session_id") @db.Uuid
  entityId   Int      @map("entity_id")
  entityName String   @map("entity_name") @db.VarChar(100)
  timestamp  DateTime @db.Timestamptz()

  session     session @relation(fields: [sessionId], references: [sessionId])
  users       users?  @relation(fields: [usersUserId], references: [userId])
  usersUserId String? @db.Uuid

  @@index([sessionId])
}

model session {
  sessionId  String   @id @default(uuid()) @map("session_id") @db.Uuid
  userId     String   @map("user_id") @db.Uuid
  deviceInfo String   @map("device_info") @db.Text
  isActive   Boolean  @map("is_active")
  createdAt  DateTime @map("created_at") @db.Timestamptz()

  user   users   @relation(fields: [userId], references: [userId])
  events event[]

  @@index([userId])
}

model userProfile {
  userProfileId String   @id @default(uuid()) @map("user_profile_id") @db.Uuid
  userId        String   @unique @map("user_id") @db.Uuid
  fName         String   @map("first_name") @db.VarChar(100)
  lName         String   @map("last_name") @db.VarChar(100)
  languageCode  String   @map("language_code") @db.VarChar(3)
  gender        String   @db.Char(1)
  dob           DateTime @db.Date
  modifiedBy    String   @map("modified_by") @db.Uuid
  createdBy     String   @map("created_by") @db.Uuid
  createdAt     DateTime @map("created_at") @db.Timestamptz()
  modifiedAt    DateTime @map("modified_at") @db.Timestamptz()
  statusCode    String   @map("status_code") @db.VarChar(30)

  user     users    @relation("UserToProfile", fields: [userId], references: [userId])
  language language @relation(fields: [languageCode], references: [languageCode])
  status   status   @relation(fields: [statusCode], references: [statusCode])

  @@index([languageCode])
  @@index([statusCode])
}

model language {
  languageCode String @id @map("language_code") @db.VarChar(3)
  languageName String @map("language_name") @db.VarChar(50)
  statusCode   String @map("status_code") @db.VarChar(30)

  audios    audio[]
  profiles  userProfile[]
  subtitles subtitle[]
  status    status        @relation(fields: [statusCode], references: [statusCode])

  @@index([statusCode])
}

model subtitle {
  subtitleId   String   @id @default(uuid()) @map("subtitle_id") @db.Uuid
  subtitleText String   @map("subtitle_text") @db.Text
  languageCode String   @map("language_code") @db.VarChar(3)
  createdBy    String   @map("created_by") @db.Uuid
  modifiedBy   String   @map("modified_by") @db.Uuid
  createdAt    DateTime @map("created_at") @db.Timestamptz()
  modifiedAt   DateTime @map("modified_at") @db.Timestamptz()
  statusCode   String   @map("status_code") @db.VarChar(30)

  language language          @relation(fields: [languageCode], references: [languageCode])
  status   status            @relation(fields: [statusCode], references: [statusCode])
  exhibits exhibitSubtitle[]

  @@index([languageCode])
  @@index([statusCode])
}

model exhibitSubtitle {
  exhibitId  String   @map("exhibit_id") @db.Uuid
  subtitleId String   @map("subtitle_id") @db.Uuid
  createdAt  DateTime @map("created_at") @db.Timestamptz()

  exhibit  exhibit  @relation(fields: [exhibitId], references: [exhibitId])
  subtitle subtitle @relation(fields: [subtitleId], references: [subtitleId])

  @@id([exhibitId, subtitleId])
  @@index([exhibitId])
  @@index([subtitleId])
  @@map("exhibit_subtitle")
}
